import {
  createContext
} from "./TVCIHLER.jsx";

// src/providers/locale/locale-provider.tsx
import { isRTL } from "@zag-js/i18n-utils";
import { createMemo } from "solid-js";

// src/providers/locale/use-locale-context.ts
var [LocaleContextProvider, useLocaleContext] = createContext({
  hookName: "useEnvironmentContext",
  providerName: "<EnvironmentProvider />",
  strict: false,
  defaultValue: () => ({ dir: "ltr", locale: "en-US" })
});

// src/providers/locale/locale-provider.tsx
var LocaleProvider = (props) => {
  const context = createMemo(
    () => ({
      locale: props.locale,
      dir: isRTL(props.locale) ? "rtl" : "ltr"
    })
  );
  return <LocaleContextProvider value={context}>{props.children}</LocaleContextProvider>;
};

// src/providers/locale/use-filter.ts
import { createFilter } from "@zag-js/i18n-utils";
import { createMemo as createMemo2 } from "solid-js";
function useFilter(props) {
  const env = useLocaleContext();
  const locale = createMemo2(() => props.locale ?? env().locale);
  return createMemo2(() => createFilter({ ...props, locale: locale() }));
}

export {
  useLocaleContext,
  LocaleProvider,
  useFilter
};
