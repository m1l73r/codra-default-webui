import {
  useLocaleContext
} from "./YUC6JE7K.jsx";
import {
  __export
} from "./7IUG3E2V.jsx";

// src/components/format/format-byte.tsx
import { formatBytes } from "@zag-js/i18n-utils";
import { createMemo } from "solid-js";
var FormatByte = (props) => {
  const ctx = useLocaleContext();
  const text = createMemo(() => {
    const { value, ...intlOptions } = props;
    return formatBytes(value, ctx().locale, intlOptions);
  });
  return <>{text()}</>;
};

// src/components/format/format-number.tsx
import { formatNumber } from "@zag-js/i18n-utils";
import { createMemo as createMemo2 } from "solid-js";
var FormatNumber = (props) => {
  const ctx = useLocaleContext();
  const text = createMemo2(() => {
    const { value, ...intlOptions } = props;
    return formatNumber(value, ctx().locale, intlOptions);
  });
  return <>{text()}</>;
};

// src/components/format/format-relative-time.tsx
import { formatRelativeTime } from "@zag-js/i18n-utils";
import { createMemo as createMemo3 } from "solid-js";
var FormatRelativeTime = (props) => {
  const ctx = useLocaleContext();
  const text = createMemo3(() => {
    const { value, ...intlOptions } = props;
    return formatRelativeTime(value, ctx().locale, intlOptions);
  });
  return <>{text()}</>;
};

// src/components/format/format.ts
var format_exports = {};
__export(format_exports, {
  Byte: () => FormatByte,
  Number: () => FormatNumber,
  RelativeTime: () => FormatRelativeTime
});

export {
  FormatByte,
  FormatNumber,
  FormatRelativeTime,
  format_exports
};
