import * as listbox$1 from '@zag-js/listbox';
import { InputProps, ItemProps, ItemState, HighlightChangeDetails, ScrollToIndexDetails, SelectionDetails, SelectionMode, ValueChangeDetails } from '@zag-js/listbox';
export { HighlightChangeDetails as ListboxHighlightChangeDetails, ScrollToIndexDetails as ListboxScrollToIndexDetails, SelectionDetails as ListboxSelectionDetails, SelectionMode as ListboxSelectionMode, ValueChangeDetails as ListboxValueChangeDetails, anatomy as listboxAnatomy } from '@zag-js/listbox';
import { CollectionItem, ListCollection } from '@zag-js/collection';
export { CollectionItem, ListCollection } from '@zag-js/collection';
export { c as createListCollection } from '../../list-collection-nOYDJvsQ.js';
import * as solid_js from 'solid-js';
import { Accessor } from 'solid-js';
import { HTMLProps, PolymorphicProps } from '../factory.js';
import { O as Optional, A as Assign } from '../../types-Bc0WfPsv.js';
import { PropTypes } from '@zag-js/solid';

interface ListboxContentBaseProps extends PolymorphicProps<'div'> {
}
interface ListboxContentProps extends HTMLProps<'div'>, ListboxContentBaseProps {
}
declare const ListboxContent: (props: ListboxContentProps) => solid_js.JSX.Element;

interface ListboxInputBaseProps extends InputProps, PolymorphicProps<'input'> {
}
interface ListboxInputProps extends HTMLProps<'input'>, ListboxInputBaseProps {
}
declare const ListboxInput: (props: ListboxInputProps) => solid_js.JSX.Element;

interface ListboxItemBaseProps extends ItemProps, PolymorphicProps<'div'> {
}
interface ListboxItemProps extends HTMLProps<'div'>, ListboxItemBaseProps {
}
declare const ListboxItem: (props: ListboxItemProps) => solid_js.JSX.Element;

interface ListboxItemGroupBaseProps extends PolymorphicProps<'div'> {
}
interface ListboxItemGroupProps extends HTMLProps<'div'>, ListboxItemGroupBaseProps {
}
declare const ListboxItemGroup: (props: ListboxItemGroupProps) => solid_js.JSX.Element;

interface ListboxItemGroupLabelBaseProps extends PolymorphicProps<'div'> {
}
interface ListboxItemGroupLabelProps extends HTMLProps<'div'>, ListboxItemGroupLabelBaseProps {
}
declare const ListboxItemGroupLabel: (props: ListboxItemGroupLabelProps) => solid_js.JSX.Element;

interface ListboxItemIndicatorBaseProps extends PolymorphicProps<'div'> {
}
interface ListboxItemIndicatorProps extends HTMLProps<'div'>, ListboxItemIndicatorBaseProps {
}
declare const ListboxItemIndicator: (props: ListboxItemIndicatorProps) => solid_js.JSX.Element;

interface ListboxItemTextBaseProps extends PolymorphicProps<'div'> {
}
interface ListboxItemTextProps extends HTMLProps<'div'>, ListboxItemTextBaseProps {
}
declare const ListboxItemText: (props: ListboxItemTextProps) => solid_js.JSX.Element;

interface ListboxLabelBaseProps extends PolymorphicProps<'label'> {
}
interface ListboxLabelProps extends HTMLProps<'label'>, ListboxLabelBaseProps {
}
declare const ListboxLabel: (props: ListboxLabelProps) => solid_js.JSX.Element;

interface UseListboxProps<T extends CollectionItem> extends Optional<Omit<listbox$1.Props<T>, 'dir' | 'getRootNode' | 'collection'>, 'id'> {
    /**
     * The collection of items
     */
    collection: ListCollection<T>;
}
interface UseListboxReturn<T extends CollectionItem> extends Accessor<listbox$1.Api<PropTypes, T>> {
}
declare const useListbox: <T extends CollectionItem>(props: UseListboxProps<T>) => UseListboxReturn<T>;

interface ListboxRootBaseProps<T extends CollectionItem> extends UseListboxProps<T>, PolymorphicProps<'div'> {
}
interface ListboxRootProps<T extends CollectionItem> extends Assign<HTMLProps<'div'>, ListboxRootBaseProps<T>> {
}
declare const ListboxRoot: <T extends CollectionItem>(props: ListboxRootProps<T>) => solid_js.JSX.Element;

interface RootProviderProps<T extends CollectionItem> {
    value: UseListboxReturn<T>;
}
interface ListboxRootProviderBaseProps<T extends CollectionItem> extends RootProviderProps<T>, PolymorphicProps<'div'> {
}
interface ListboxRootProviderProps<T extends CollectionItem> extends HTMLProps<'div'>, ListboxRootProviderBaseProps<T> {
}
declare const ListboxRootProvider: <T extends CollectionItem>(props: ListboxRootProviderProps<T>) => solid_js.JSX.Element;

interface ListboxValueTextBaseProps extends PolymorphicProps<'span'> {
    /**
     * Text to display when no value is selected.
     */
    placeholder?: string;
}
interface ListboxValueTextProps extends HTMLProps<'span'>, ListboxValueTextBaseProps {
}
declare const ListboxValueText: (props: ListboxValueTextProps) => solid_js.JSX.Element;

interface UseListboxContext<T extends CollectionItem> extends UseListboxReturn<T> {
}
declare const useListboxContext: () => UseListboxContext<any>;

interface UseListboxItemContext extends ItemState {
}
declare const useListboxItemContext: () => UseListboxItemContext;

declare const listbox_HighlightChangeDetails: typeof HighlightChangeDetails;
declare const listbox_ScrollToIndexDetails: typeof ScrollToIndexDetails;
declare const listbox_SelectionDetails: typeof SelectionDetails;
declare const listbox_SelectionMode: typeof SelectionMode;
declare const listbox_ValueChangeDetails: typeof ValueChangeDetails;
declare namespace listbox {
  export { ListboxContent as Content, type ListboxContentBaseProps as ContentBaseProps, type ListboxContentProps as ContentProps, listbox_HighlightChangeDetails as HighlightChangeDetails, ListboxInput as Input, type ListboxInputBaseProps as InputBaseProps, type ListboxInputProps as InputProps, ListboxItem as Item, type ListboxItemBaseProps as ItemBaseProps, ListboxItemGroup as ItemGroup, type ListboxItemGroupBaseProps as ItemGroupBaseProps, ListboxItemGroupLabel as ItemGroupLabel, type ListboxItemGroupLabelBaseProps as ItemGroupLabelBaseProps, type ListboxItemGroupLabelProps as ItemGroupLabelProps, type ListboxItemGroupProps as ItemGroupProps, ListboxItemIndicator as ItemIndicator, type ListboxItemIndicatorBaseProps as ItemIndicatorBaseProps, type ListboxItemIndicatorProps as ItemIndicatorProps, type ListboxItemProps as ItemProps, ListboxItemText as ItemText, type ListboxItemTextBaseProps as ItemTextBaseProps, type ListboxItemTextProps as ItemTextProps, ListboxLabel as Label, type ListboxLabelBaseProps as LabelBaseProps, type ListboxLabelProps as LabelProps, ListboxRoot as Root, type ListboxRootBaseProps as RootBaseProps, type ListboxRootProps as RootProps, ListboxRootProvider as RootProvider, type ListboxRootProviderBaseProps as RootProviderBaseProps, type ListboxRootProviderProps as RootProviderProps, listbox_ScrollToIndexDetails as ScrollToIndexDetails, listbox_SelectionDetails as SelectionDetails, listbox_SelectionMode as SelectionMode, listbox_ValueChangeDetails as ValueChangeDetails, ListboxValueText as ValueText, type ListboxValueTextBaseProps as ValueTextBaseProps, type ListboxValueTextProps as ValueTextProps };
}

export { listbox as Listbox, ListboxContent, type ListboxContentBaseProps, type ListboxContentProps, ListboxInput, type ListboxInputBaseProps, type ListboxInputProps, ListboxItem, type ListboxItemBaseProps, ListboxItemGroup, type ListboxItemGroupBaseProps, ListboxItemGroupLabel, type ListboxItemGroupLabelBaseProps, type ListboxItemGroupLabelProps, type ListboxItemGroupProps, ListboxItemIndicator, type ListboxItemIndicatorBaseProps, type ListboxItemIndicatorProps, type ListboxItemProps, ListboxItemText, type ListboxItemTextBaseProps, type ListboxItemTextProps, ListboxLabel, type ListboxLabelBaseProps, type ListboxLabelProps, ListboxRoot, type ListboxRootBaseProps, type ListboxRootProps, ListboxRootProvider, type ListboxRootProviderBaseProps, type ListboxRootProviderProps, ListboxValueText, type ListboxValueTextBaseProps, type ListboxValueTextProps, type UseListboxContext, type UseListboxItemContext, type UseListboxProps, type UseListboxReturn, useListbox, useListboxContext, useListboxItemContext };
